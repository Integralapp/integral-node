/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { IntegralApi } from "@integralapi/node";
import * as core from "../../../../core";

export const ApplicationTier: core.serialization.ObjectSchema<
    serializers.ApplicationTier.Raw,
    IntegralApi.ApplicationTier
> = core.serialization.object({
    id: core.serialization.string(),
    createdAt: core.serialization.string(),
    updatedAt: core.serialization.string(),
    deletedAt: core.serialization.string().optional(),
    role: core.serialization.string(),
    description: core.serialization.string(),
    application: core.serialization.lazyObject(async () => (await import("../../..")).Application),
    applicationRateLimit: core.serialization.lazyObject(async () => (await import("../../..")).ApplicationRateLimit),
});

export declare namespace ApplicationTier {
    interface Raw {
        id: string;
        createdAt: string;
        updatedAt: string;
        deletedAt?: string | null;
        role: string;
        description: string;
        application: serializers.Application.Raw;
        applicationRateLimit: serializers.ApplicationRateLimit.Raw;
    }
}
